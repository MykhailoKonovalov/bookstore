version: '3.7'

services:
  nginx:
    image: nginx:1.15.3-alpine
    container_name: ${PROJECT_NAME}-nginx
    restart: always
    volumes:
      - './public/:/usr/src/app'
      - './.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '8001:80'
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    container_name: ${PROJECT_NAME}-php
    restart: always
    volumes:
      - './:/usr/src/app:cached'
      - './.docker/php/config/php.ini:/usr/local/etc/php/conf.d/php.ini'
    depends_on:
      - rabbitmq

  postgres:
    image: postgres:16-alpine
    container_name: ${PROJECT_NAME}-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - '5432:5432'
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  redis:
    image: redis
    container_name: ${PROJECT_NAME}-redis
    restart: always
    ports:
      - '6369:${REDIS_PORT}'

  rabbitmq:
    image: rabbitmq:management
    container_name: ${PROJECT_NAME}-rabbitmq
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

volumes:
  database_data: